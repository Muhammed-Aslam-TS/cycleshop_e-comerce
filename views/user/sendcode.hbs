<style>
    .height-100 {
        height: 100vh
    }

    .card {
        width: 400px;
        border: none;
        height: 300px;
        box-shadow: 0px 5px 20px 0px #d2dae3;
        z-index: 1;
        display: flex;
        justify-content: center;
        align-items: center
    }

    .card h6 {
        color: red;
        font-size: 20px
    }

    .inputs input {
        width: 40px;
        height: 40px;

    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0
    }

    .card-2 {
        background-color: #fff;
        padding: 10px;
        width: 350px;
        height: 100px;
        bottom: -50px;
        left: 20px;
        position: absolute;
        border-radius: 5px;

    }

    .card-2 .content {
        margin-top: 50px
    }

    .card-2 .content a {
        color: red
    }

    .form-control:focus {
        box-shadow: none;
        border: 2px solid red
    }

    .validate {
        border-radius: 20px;
        height: 40px;
        background-color: red;
        border: 1px solid red;
        width: 140px
    }
</style>
<main class="">
    <section>
        <div class="container height-100 d-flex justify-content-center align-items-center">
            <div class="position-relative">
                <form action="/verify" method="post">
                    <div class="card p-2 text-center">
                        <h6>Please enter the one time password <br> to login your account</h6>
                        <div> <span>A code has been sent to</span>

                            <small>{{this.user.Phone}}
                        </div>
                        <div inputmode="code" id="otp" class="inputs d-flex flex-row justify-content-center mt-2">
                            <input class="m-2 text-center form-control rounded" type="text" id="first" maxlength="1"
                                name="code1" /> <input class="m-2 text-center form-control rounded" type="text"
                                id="second" maxlength="1" name="code2" /> <input
                                class="m-2 text-center form-control rounded" type="text" id="third" maxlength="1"
                                name="code3" /> <input class="m-2 text-center form-control rounded" type="text"
                                id="fourth" maxlength="1" name="code4" /> <input
                                class="m-2 text-center form-control rounded" type="text" id="fifth" maxlength="1"
                                name="code5" /> <input class="m-2 text-center form-control rounded" type="text"
                                id="sixth" maxlength="1" name="code6" />
                        </div>
                        <div class="text-danger fs-4">
                            Time left : <span id="timer"></span>
                        </div>

                        <div class="mt-4">
                           <span>
                             <button class="btn btn-danger px-4 validate" id="val">Submit</button>
                            <a href="/otpLogin" class="btn btn-danger px-4 validate" id="value">Resend otp</a>
                           </span>
                        </div>


                    </div>
                </form>
            </div>
        </div>
    </section>
</main>

<script>
    document.addEventListener("DOMContentLoaded", function (event) {

        function OTPInput() {
            const inputs = document.querySelectorAll('#otp > *[id]');
            for (let i = 0; i < inputs.length; i++) { inputs[i].addEventListener('keydown', function (event) { if (event.key === "Backspace") { inputs[i].value = ''; if (i !== 0) inputs[i - 1].focus(); } else { if (i === inputs.length - 1 && inputs[i].value !== '') { return true; } else if (event.keyCode > 47 && event.keyCode < 58) { inputs[i].value = event.key; if (i !== inputs.length - 1) inputs[i + 1].focus(); event.preventDefault(); } else if (event.keyCode > 64 && event.keyCode < 91) { inputs[i].value = String.fromCharCode(event.keyCode); if (i !== inputs.length - 1) inputs[i + 1].focus(); event.preventDefault(); } } }); }
        } OTPInput();
    });




    let timerOn = true;

    function timer(remaining) {
        var m = Math.floor(remaining / 60);
        var s = remaining % 60;

        m = m < 10 ? '0' + m : m;
        s = s < 10 ? '0' + s : s;
        document.getElementById('timer').innerHTML = m + ':' + s;
        remaining -= 1;

        if (remaining >= 0 && timerOn) {
            setTimeout(function () {
                timer(remaining);
            }, 1000);
            document.getElementById('value').style.display = 'none'
            return;
        }
        if (!timerOn) {
            // Do validate stuff here
            return;
        }

        // Do timeout stuff here
        document.getElementById('val').style.display = 'none'
        document.getElementById('value').style.display = 'block'
    }

    timer(5);






</script>